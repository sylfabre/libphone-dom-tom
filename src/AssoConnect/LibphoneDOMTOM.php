<?php

namespace AssoConnect;

/**
 *  @author Sylvain Fabre
 */
Class LibphoneDOMTOM {

	/**
	 * Use the right telephone code of the phone number if it belongs to a French DOM/TOM
	 * @var string $phone Valid phone number in international format
	 * @return string
	 */
	public static function parse($phone){
		// French phone number
		if(
			// French telephone code
			substr($phone, 0, 3) === '+33'
			// French number length in international format
			AND strlen($phone) === 12
		){
			$prefix = substr($phone, 3, 5);
			// RE - La Réunion
			if(in_array($prefix, array(26220, 69200, 69201, 69202, 69203, 69204, 69205, 69206, 69207, 69208, 69209, 69210, 69211, 69212, 69213, 69214, 69215, 69216, 69217, 69218, 69219, 69220, 69221, 69222, 69223, 69224, 69225, 69226, 69227, 69228, 69229, 69230, 69231, 69232, 69233, 69234, 69235, 69236, 69237, 69238, 69239, 69240, 69241, 69242, 69243, 69244, 69245, 69246, 69247, 69248, 69249, 69250, 69251, 69252, 69253, 69254, 69255, 69256, 69257, 69258, 69259, 69260, 69261, 69262, 69263, 69264, 69265, 69266, 69267, 69268, 69269, 69270, 69271, 69272, 69273, 69274, 69275, 69276, 69277, 69278, 69279, 69280, 69281, 69282, 69283, 69284, 69285, 69286, 69287, 69288, 69289, 69290, 69291, 69292, 69293, 69294, 69295, 69296, 69297, 69298, 69299, 69300, 69301, 69302, 69303, 69304, 69306, 69310, 69311, 69313, 69320, 69321, 69322, 69330, 69333, 69339, 69340, 69341, 69342, 69343, 69344, 69345, 69346, 69347, 69350, 69355, 69360, 69366, 69370, 69377, 69380, 69381, 69382, 69383, 69388, 69390, 69391, 69392, 69393, 69394, 69397, 69399, 97622, 97627, 97637, 97631, 97632, 97633, 97690, 97691, 97692, 97693, 97694, 97695, 97696, 97697, 97698, 97699))){
				return '+262' . substr($phone, 3);
			}
			// YT - Mayotte
			if(in_array($prefix, array(26906, 26907, 26950, 26951, 26960, 26961, 26962, 26963, 26964, 26965, 26966, 26970, 26980, 63900, 63901, 63902, 63903, 63904, 63905, 63906, 63907, 63909, 63910, 63911, 63919, 63920, 63921, 63922, 63923, 63924, 63925, 63926, 63927, 63928, 63929, 63930, 63939, 63940, 63950, 63960, 63961, 63962, 63963, 63964, 63965, 63966, 63967, 63968, 63969, 63970, 63976, 63990, 63994, 63995, 63996, 63997, 63999))){
				return '+262' . substr($phone, 3);
			}
			// PM - Saint Pierre and Miquelon
			else if(in_array($prefix, array(50840, 50841, 50842, 50844, 50850, 50855))){
				// In case of Saint Pierre and Miquelon, the 508 prefix is already in the number
				return '+' . substr($phone, 3);
			}
			// GP - Guadeloupe
			// BL - Saint-Barthélemy
			// MF - Saint Martin
			else if(in_array($prefix, array(59001, 59002, 59003, 59004, 59005, 59006, 59008, 59010, 59011, 59012, 59020, 59021, 59022, 59023, 59024, 59025, 59026, 59028, 59031, 59032, 59038, 59039, 59040, 59041, 59042, 59044, 59046, 59047, 59048, 59049, 59053, 59054, 59055, 59057, 59059, 59060, 59061, 59068, 59069, 59070, 59080, 59081, 59082, 59083, 59084, 59085, 59086, 59087, 59088, 59089, 59090, 59091, 59092, 59093, 59094, 59095, 59096, 59097, 59098, 59099, 69000, 69001, 69002, 69003, 69004, 69005, 69006, 69007, 69008, 69009, 69010, 69011, 69012, 69013, 69014, 69015, 69016, 69017, 69018, 69019, 69020, 69021, 69022, 69023, 69024, 69025, 69026, 69027, 69028, 69029, 69030, 69031, 69032, 69033, 69034, 69035, 69036, 69037, 69038, 69039, 69040, 69041, 69042, 69043, 69044, 69045, 69046, 69047, 69048, 69049, 69050, 69051, 69052, 69053, 69054, 69055, 69056, 69057, 69058, 69059, 69060, 69061, 69062, 69063, 69064, 69065, 69066, 69067, 69068, 69069, 69070, 69071, 69072, 69073, 69074, 69075, 69076, 69077, 69078, 69079, 69080, 69081, 69082, 69083, 69084, 69085, 69086, 69087, 69088, 69089, 69090, 69091, 69092, 69093, 69094, 69095, 69096, 69097, 69098, 69099, 69122, 69129, 69130, 69131, 69132, 69133, 69134, 69135, 69187, 97601, 97602, 97603, 97604, 97605, 97606, 97607, 97608, 97609, 97610, 97611, 97612, 97613, 97617))){
				return '+590' . substr($phone, 3);
			}
			// GF - Guyane
			else if(in_array($prefix, array(59400, 59401, 59403, 59406, 59410, 59420, 59425, 59426, 59429, 59430, 59431, 59435, 59437, 59438, 59439, 59440, 59444, 59446, 59456, 59457, 59480, 59494, 69400, 69401, 69402, 69403, 69404, 69405, 69406, 69407, 69408, 69409, 69410, 69411, 69412, 69413, 69414, 69415, 69416, 69417, 69418, 69419, 69420, 69421, 69422, 69423, 69424, 69425, 69426, 69427, 69428, 69429, 69430, 69431, 69432, 69433, 69434, 69438, 69440, 69441, 69442, 69443, 69444, 69445, 69446, 69447, 69448, 69449, 69490, 69491, 69492, 69493, 69494, 69495, 69496, 69497, 69498, 69499, 97640, 97641, 97647, 97650, 97651, 97652))){
				return '+594' . substr($phone, 3);
			}
			// MQ - Martinique
			else if(in_array($prefix, array(59646, 59673, 69600, 69601, 69602, 69603, 69604, 69605, 69606, 69607, 69608, 69609, 69610, 69611, 69612, 69613, 69614, 69615, 69616, 69617, 69618, 69619, 69620, 69621, 69622, 69623, 69624, 69625, 69626, 69627, 69628, 69629, 69630, 69631, 69632, 69633, 69634, 69635, 69636, 69637, 69638, 69639, 69640, 69641, 69642, 69643, 69644, 69645, 69646, 69647, 69648, 69649, 69650, 69651, 69652, 69653, 69654, 69655, 69656, 69660, 69661, 69662, 69663, 69664, 69670, 69671, 69672, 69673, 69674, 69675, 69676, 69677, 69678, 69679, 69680, 69681, 69682, 69683, 69684, 69685, 69686, 69687, 69688, 69689, 69690, 69691, 69692, 69693, 69694, 69695, 69696, 69697, 69698, 69699, 69727, 97661, 97662, 97663, 97664, 97665, 97666, 97667, 97668, 97669, 97671, 97672, 97673, 97676, 97677))){
				return '+596' . substr($phone, 3);
			}
		}
		// Other French number or non-French number
		return $phone;
	}

}